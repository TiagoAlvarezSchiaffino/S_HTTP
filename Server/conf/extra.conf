server {
    # listen for http connections on port 80
    listen 80 default_server;
    listen [::]:80 default_server;

    # domain name
    server_name example.com www.example.com;

    # path to read the files from
    root /var/www/example.com;
    index index.html;
    try_files $uri /index.html;
}

# ~ (case-sensitive) ~* (case-insensitive)
location ~ IndexPage\.php {}
location ~* IndexPage\.php {}

# read from only in the "/BlogPlanet/" directory or "/BlogPlanet/index.php" (case-sensitive)
location ~ ^/BlogPlanet(/|/index\.php)$ {}

# search for the first occurring string; stop searching even if there's a more specific one later
location ^~ /images/IndexPage/ {}
location ^~ /blog/BlogPlanet/ {}

# find the exact match with the requested path
location = / {}

# after path is found, run block of code in brackets
location / {
    # this is where we will search for all our files in
    root html;

    # client requests from server, returns file specified in index
    # if index.html isn't found, it will search for index.htm instead, 404 will be thrown if all doesn't exists
    index index.html index.htm;
}

# "location" processing sequence flow
# 1. Exact string matches will be processed first ( = )
# 2. Any remaining literal string directives will be processed next ( ^~ )
# 3. Each location directive with a regular expression will be processed next ( ~ )( ~* )
# 4. if there are no matching regular expression, the most specific string will be used

location / {
    root /srv/www/example.com/public_html;
    index index.html index.htm;
}

location ~ \.pl$ {
    gzip off;
    include /etc/nginx/fastcgi_params;
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
    fastcgi_index index.pl;
    fastcgi_param SCRIPT_FILENAME
    /srv/www/example.com/public_html$fastcgi_script_name;
}

# client - http://example.com/
# server - return if index.html exists, otherwise return index.htm. if both doesnt exist, return 404 error

# client - http://example.com/blog/
# server - return if blog/index.html exists, otherwise return blog/index.htm. if both doesnt exist, return 404 error

# client - http://example.com/task.pl
# server - using fastCGI it executes /srv/www/example.com/public_html/task.pl which will return the relevant result

# client - http://example.com/username/roster.pl
# server - using fastCGI it executes /srv/www/example.com/piblic_html/username/roster.pl which will return the relevant result

# if none of the ".pl" extension is found, returns the first location block's index (index.html)